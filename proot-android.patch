diff --git a/src/path/temp.c b/src/path/temp.c
index 27d06a5..de40bde 100644
--- a/src/path/temp.c
+++ b/src/path/temp.c
@@ -1,5 +1,6 @@
 #include <sys/types.h>  /* stat(2), opendir(3), */
 #include <sys/stat.h>   /* stat(2), chmod(2), */
+#include <fcntl.h>      /* open(2), */
 #include <unistd.h>     /* stat(2), rmdir(2), unlink(2), readlink(2), */
 #include <errno.h>      /* errno(2), */
 #include <dirent.h>     /* readdir(3), opendir(3), */
@@ -206,6 +207,8 @@ static char *create_temp_name(const Tracee *tracee, const char *prefix)
 {
 	TALLOC_CTX *context;
 	char *name;
+	unsigned int rnd = 0x12345678;
+	int devrandom;
 
 	if (tracee == NULL) {
 		context = talloc_autofree_context();
@@ -217,7 +220,13 @@ static char *create_temp_name(const Tracee *tracee, const char *prefix)
 	else
 		context = tracee->ctx;
 
-	name = talloc_asprintf(context, "%s/%s-%d-XXXXXX", P_tmpdir, prefix, getpid());
+	devrandom = open("/dev/random", 0);
+	if (devrandom > 0) {
+		read(devrandom, &rnd, sizeof(rnd));
+		close(devrandom);
+	}
+
+	name = talloc_asprintf(context, "%s/tmp/%s-%d-%08x", get_root(tracee), prefix, getpid(), rnd);
 	if (name == NULL) {
 		notice(tracee, ERROR, INTERNAL, "can't allocate memory");
 		return NULL;
@@ -241,8 +250,7 @@ const char *create_temp_directory(const Tracee *tracee, const char *prefix)
 	if (name == NULL)
 		return NULL;
 
-	name = mkdtemp(name);
-	if (name == NULL) {
+	if (mkdir(name, 0700) < 0) {
 		notice(tracee, ERROR, SYSTEM, "can't create temporary directory");
 		return NULL;
 	}
@@ -267,7 +275,7 @@ const char *create_temp_file(const Tracee *tracee, const char *prefix)
 	if (name == NULL)
 		return NULL;
 
-	fd = mkstemp(name);
+	fd = open(name, O_EXCL | O_CREAT, 0600);
 	if (fd < 0) {
 		notice(tracee, ERROR, SYSTEM, "can't create temporary file");
 		return NULL;
@@ -293,7 +301,7 @@ FILE* open_temp_file(const Tracee *tracee, const char *prefix)
 	if (name == NULL)
 		return NULL;
 
-	fd = mkstemp(name);
+	fd = open(name, O_EXCL | O_CREAT, 0600);
 	if (fd < 0)
 		goto error;
 
